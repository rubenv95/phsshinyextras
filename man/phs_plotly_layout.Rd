% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phs_plotly_layout.R
\name{phs_plotly_layout}
\alias{phs_plotly_layout}
\title{Add layout formatting to a plotly chart}
\usage{
phs_plotly_layout(
  plotly_chart,
  x_axis,
  y_axis,
  x_title = "Default",
  y_title = "Default"
)
}
\arguments{
\item{plotly_chart}{A plotly chart to update}

\item{x_axis}{A string to determine x axis layout. Options include "Month",
"Year", "Categorical", with slightly different formatting, but consistent
font and size (Arial)}

\item{y_axis}{A string to determine y axis layout. Options include "Number"
and "Proportion", with slightly different formatting, but consistent font
and size. Proportion chart should be applied to 100\% bar charts}

\item{x_title}{A string to rename the x axis title. "Default" uses an
in-built option based on the x_axis chosen.}

\item{y_title}{A string to rename the y axis title. "Default" uses an
in-built option based on the y_axis chosen.}
}
\value{
A plotly chart with updated layout
}
\description{
\code{phs_plotly_layout} can be used to add a built-in layout format for a plotly
chart, using the plotly::layout() function
}
\examples{
## Set-up an example chart
library(dplyr)
library(phsshinyextras)

data("sample_data")
# Using the in-built sample data set, filtering to a specific health board
example_data = filter(sample_data, health_board == "NHS Lothian",
                      simd != "Total")

# Stacked bar chart
chart = proportion_barchart(data = example_data,
                            x_axis = date,
                            y_axis = proportion,
                            category_var = simd,
                            stacked = TRUE)

# Using generic titles, month x axis and proportion y axis
chart |>
  phs_plotly_layout(x_axis = "Month", y_axis = "Proportion")

# Relabel titles
chart |>
  phs_plotly_layout(x_axis = "Month", y_axis = "Proportion",
                    x_title = "Month/Year", y_title = "Proportion by SIMD")

}
