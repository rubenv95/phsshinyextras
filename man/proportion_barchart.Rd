% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proportion_barchart.R
\name{proportion_barchart}
\alias{proportion_barchart}
\title{Create a 100\% proportion bar chart}
\usage{
proportion_barchart(
  data,
  x_axis,
  y_axis,
  category_var,
  bargap = TRUE,
  stacked = FALSE,
  palette = c("#3F3685", "#9B4393", "#1E7F84", "#83BB26", "#3393DD", "#6B5C85")
)
}
\arguments{
\item{data}{The dataframe you want to create a chart from}

\item{x_axis}{The x axis variable (usually a date)}

\item{y_axis}{The proportion y axis variable in decimal format}

\item{category_var}{The category variable you want to split by, like color in
plotly or fill in ggplot2}

\item{bargap}{TRUE or FALSE whether you'd like to have a gap between the bars}

\item{stacked}{TRUE or FALSE whether you'd like the chart stacked (FALSE =
side by side)}

\item{palette}{A vector of hex codes for changing the palette. Default is PHS
colours}
}
\value{
A plotly chart
}
\description{
Creates a generic proportion bar chart in plotly. This function makes it
quick and easy to reuse similar code, such as in a dashboard
}
\examples{
library(dplyr)
library(phsshinyextras)

data("sample_data")
# Using the in-built sample data set, filtering to a specific health board
example_data = filter(sample_data, health_board == "NHS Lothian",
                      simd != "Total")
# Standard side by side chart
proportion_barchart(data = example_data,
                    x_axis = date,
                    y_axis = proportion,
                    category_var = simd)

# Stacked bar chart
proportion_barchart(data = example_data,
                    x_axis = date,
                    y_axis = proportion,
                    category_var = simd,
                    stacked = TRUE)

# Changing the palette
proportion_barchart(data = example_data,
                    x_axis = date,
                    y_axis = proportion,
                    category_var = simd,
                    stacked = TRUE,
                    palette = c("#15138f", "#927dc1", "#f1f1f1",
                                "#ec9c9d", "#de425b"))

# Remove bar gap
proportion_barchart(data = example_data,
                    x_axis = date,
                    y_axis = proportion,
                    category_var = simd,
                    stacked = TRUE,
                    bargap = FALSE)

# Creating a tooltip beforehand as a variable
tooltip_example = example_data |>
  mutate(tooltip = paste0(
    "Date: ", date, "<br>",
    scales::percent(proportion, accuracy = 1), " of records were in ",
    "SIMD quintile ", simd
  ))

# Automatically picks up the tooltip by its name
proportion_barchart(data = tooltip_example,
                    x_axis = date,
                    y_axis = proportion,
                    category_var = simd,
                    stacked = TRUE)
}
